        // let deletionBatches = undefined;
        // if (recordsToDelete.length > 200) {
        //     deletionBatches = partitionArrayBySize(recordsToDelete, 200);
        // } else {
        //     deletionBatches = [recordsToDelete];
        // }
        // writeLog(LogTypeEnum.AUDIT, `Processing ${deletionBatches.length} batches of records to delete`,);
        // for (let i = 0; i < deletionBatches.length; i++) {
        //     if (numDeleted >= maxDeletionsToProcess) {
        //         writeLog(LogTypeEnum.AUDIT, `Max deletions reached`, `Max deletions of ${maxDeletionsToProcess} reached. Stopping batch processing.`);
        //         break; // stop processing batches
        //     }
        //     const batch = deletionBatches[i];
        //     writeLog(LogTypeEnum.AUDIT, `Processing batch ${i+1} of ${deletionBatches.length}`, `Batch size: ${batch.length}`);
        //     for (let j = 0; j < batch.length; j++) {
        //         if (numDeleted >= maxDeletionsToProcess) {
        //             writeLog(LogTypeEnum.AUDIT, `Max deletions reached`, `Max deletions of ${maxDeletionsToProcess} reached. Stopping batch processing.`);
        //             break; // stop processing this batch
        //         }
        //         const internalId = batch[j];
        //         try {
        //             const rec = record.load({ type: recordType, id: internalId });
        //             /**@type {DeleteRecordResult} */
        //             const result = { internalId, recordType };
        //             if (responseProps && typeof responseProps === 'string') {
        //                 result[responseProps] = rec.getValue({ fieldId: responseProps });
        //             } else if (responseProps && Array.isArray(responseProps)) {
        //                 for (const prop of responseProps) {
        //                     result[prop] = rec.getValue({ fieldId: prop });
        //                 }
        //             }
        //             resultArray.push(result);
        //             record.delete({ type: recordType, id: internalId });
        //             numDeleted++;
        //         } catch (e) {
        //             writeLog(
        //                 LogTypeEnum.ERROR, 
        //                 `Error deleting record ${internalId} of type ${recordType}`, 
        //                 e.message, 
        //                 e.stack
        //             );
        //             return { 
        //                 success: false, 
        //                 message: `Error deleting record ${internalId} of type ${recordType}`, 
        //                 error: e.message, 
        //                 results: resultArray, 
        //                 logArray 
        //             };
        //         }
        //     }
        // } 